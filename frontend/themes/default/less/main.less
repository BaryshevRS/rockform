/*
 * Rockform v.3 
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */

// Core variables and mixins
@import "variables.less";
@import "mixins.less";
.bf-content {
    -ms-text-size-adjust: 100%; // 2
    -webkit-text-size-adjust: 100%; // 2
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    font-size: 14px;
    line-height: 1.42857143;
    color: #333;
    width: 400px;
    // Reset and dependencies
    @import "normalize.less";
    @import "buttons.less";
    //
    // Forms
    // --------------------------------------------------
    // Normalize non-controls
    //
    // Normalize form controls
    //
    // While most of our form styles require extra classes, some basic normalization
    // is required to ensure optimum display with or without those classes to better
    // address browser inconsistencies.
    // Position radios and checkboxes better
    input[type="radio"],
    input[type="checkbox"] {
        margin: 4px 0 0;
        margin-top: 1px \9; // IE8-9
        line-height: normal;
    }
    input[type="file"] {
        display: block;
    }
    // Make range inputs behave like textual form controls
    input[type="range"] {
        display: block;
        width: 100%;
    }
    // Make multiple select elements height not fixed
    select[multiple],
    select[size] {
        height: auto;
    }
    // Focus for file, radio, and checkbox
    input[type="file"]:focus,
    input[type="radio"]:focus,
    input[type="checkbox"]:focus {
        .tab-focus();
    }
}

// Common form controls
//
// Shared size and type resets for form controls. Apply `.form-control` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]
.bf-form-control {
    float: left;
    width: 258px;
    .box-sizing(content-box);
    display: block;
    height: @input-height-base; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
    padding: 4px 10px;
    font-size: @font-size-base;
    line-height: @line-height-base;
    color: @input-color;
    background-color: @input-bg;
    background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
    border: 1px solid @input-border;
    border-radius: @input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
    .box-shadow(inset 0 1px 1px rgba(0, 0, 0, .075));
    .transition(~"border-color ease-in-out .15s, box-shadow ease-in-out .15s");
    // Customize the `:focus` state to imitate native WebKit styles.
    .form-control-focus();
    // Placeholder
    .placeholder();
    // Disabled and read-only inputs
    //
    // HTML5 says that controls under a fieldset > legend:first-child won't be
    // disabled if the fieldset is disabled. Due to implementation difficulty, we
    // don't honor that edge case; we style them as disabled anyway.
    &[disabled],
    &[readonly] {
        background-color: @input-bg-disabled;
        opacity: 1; // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655
    }
    &[disabled] {
        cursor: @cursor-disabled;
    }
    // Reset height for `textarea`s
    textarea& {
        height: auto;
    }
}

.bf-row {
    width: 100%;
    float: left;
    margin: 4px 0;
    .clearfix();
    label {
        display: inline-block;
        *display: inline;
        *zoom: 1;
        float: left;
        font-size: 14px;
        padding: 12px 0;
        vertical-align: middle;
        width: 120px;
    }
}

.bf-header {
    font-size: 16px;
    font-weight: bold;
    line-height: 15px;
    padding-bottom: 15px;
}

.bf-right {
    float: right;
}

.bf-info-img {
    display: inline-block;
    *display: inline;
    *zoom: 1;
    float: left;
    padding: 0;
    vertical-align: middle;
    width: 120px;
    img {
        border: none;
        cursor: pointer;
    }
}


/* status field*/

.bf-status {
    border: 1px solid #ccc;
    border-radius: 5px;
    color: #fff;
    max-width: 400px;
    margin: 10px auto;
    padding: 10px 0;
    text-align: center;
    width: 100%;
}

.bf-status-0 {
    background: red;
}

.bf-status-1 {
    background: green;
}

.has-success {
    .form-control-validation(@state-success-text;
    @state-success-text;
    @state-success-bg);
}

.has-error {
    .form-control-validation(@state-danger-text;
    @state-danger-text;
    @state-danger-bg);
}


/* popup */

@import "popup.less";

/* mobile */

@media (max-width: 480px) {
    .bf-content {
        width: 100%;
    }
    .bf-row label {
        width: 100%; 
    }
    .bf-form-control {
        width: 96%;
        padding:  2%;  
    } 
}
